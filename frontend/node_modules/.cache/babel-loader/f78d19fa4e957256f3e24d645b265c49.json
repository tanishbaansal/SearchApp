{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanis\\\\Desktop\\\\assignment\\\\searchapp\\\\src\\\\components\\\\SearchBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBox = () => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const loading = open && options.length === 0;\n  const [companies, setCompanies] = useState([]);\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      await sleep(1e3); // For demo purposes.\n\n      if (active) {\n        setOptions([...companies]);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleChange = async event => {\n    //Fetching Data from api\n    const res = await axios.post(`http://localhost:3001`, {\n      companyName: event.target.value.toLowerCase()\n    }, {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    });\n    let companyList = [];\n    let matchString = /<.*id=\"(.*)\".*>(.*)<\\/div>/;\n\n    for (let i of res.data.split(\"\\n\")) {\n      //Sanitizing the data like removing html tags and extra tags\n      let sanitizedData = i.replace(/(\\t\\n)|(\\n\\t)|(\\t)/gm, \"\"); //Getting the required data from string using regex\n\n      let matchStringWithI = i.match(matchString);\n\n      if (sanitizedData.length > 0) {\n        companyList.push({\n          name: matchStringWithI[2],\n          link: matchStringWithI[1]\n        });\n      }\n    }\n\n    setCompanies(companyList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    open: open,\n    onOpen: () => {\n      setOpen(true);\n    },\n    onClose: () => {\n      setOpen(false);\n    },\n    loading: loading,\n    onChange: handleChange,\n    options: companies.map(option => option.name),\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Asynchronous\",\n      InputProps: { ...params.InputProps,\n        endAdornment: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"inherit\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 34\n          }, this) : null, params.InputProps.endAdornment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBox, \"BkIoGXk6bODMSVJQEgxTXWPlBu0=\");\n\n_c = SearchBox;\nexport default SearchBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","useState","TextField","Autocomplete","axios","SearchBox","open","setOpen","loading","options","length","companies","setCompanies","useEffect","active","undefined","sleep","setOptions","handleChange","event","res","post","companyName","target","value","toLowerCase","headers","companyList","matchString","i","data","split","sanitizedData","replace","matchStringWithI","match","push","name","link","map","option","params","InputProps","endAdornment"],"sources":["C:/Users/tanis/Desktop/assignment/searchapp/src/components/SearchBox.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport axios from \"axios\";\r\n\r\nconst SearchBox = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const loading = open && options.length === 0;\r\n    const [companies, setCompanies] = useState([]);\r\n\r\n    React.useEffect(() => {\r\n      let active = true;\r\n  \r\n      if (!loading) {\r\n        return undefined;\r\n      }\r\n  \r\n      (async () => {\r\n        await sleep(1e3); // For demo purposes.\r\n  \r\n        if (active) {\r\n          setOptions([...companies]);\r\n        }\r\n      })();\r\n  \r\n      return () => {\r\n        active = false;\r\n      };\r\n    }, [loading]);\r\n  \r\n    React.useEffect(() => {\r\n      if (!open) {\r\n        setOptions([]);\r\n      }\r\n    }, [open]);\r\n    const handleChange = async (event) => {\r\n        //Fetching Data from api\r\n        const res = await axios.post(\r\n            `http://localhost:3001`,\r\n            { companyName: event.target.value.toLowerCase() },\r\n            {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                },\r\n            }\r\n        );\r\n        let companyList = [];\r\n        let matchString = /<.*id=\"(.*)\".*>(.*)<\\/div>/;\r\n\r\n        for (let i of res.data.split(\"\\n\")) {\r\n            //Sanitizing the data like removing html tags and extra tags\r\n            let sanitizedData = i.replace(/(\\t\\n)|(\\n\\t)|(\\t)/gm, \"\");\r\n\r\n            //Getting the required data from string using regex\r\n            let matchStringWithI = i.match(matchString);\r\n            if (sanitizedData.length > 0) {\r\n                companyList.push({\r\n                    name: matchStringWithI[2],\r\n                    link: matchStringWithI[1],\r\n                });\r\n            }\r\n        }\r\n        setCompanies(companyList);\r\n    };\r\n\r\n    return (\r\n        <Autocomplete\r\n            open={open}\r\n            onOpen={() => {\r\n                setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n                setOpen(false);\r\n            }}\r\n            \r\n      loading={loading}\r\n            onChange={handleChange}\r\n            options={companies.map((option) => option.name)}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Asynchronous\"\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  endAdornment: (\r\n                    <React.Fragment>\r\n                      {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                      {params.InputProps.endAdornment}\r\n                    </React.Fragment>\r\n                  ),\r\n                }}\r\n              />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;EAEA,MAAMO,OAAO,GAAGF,IAAI,IAAIG,OAAO,CAACC,MAAR,KAAmB,CAA3C;EACE,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;EAEAD,KAAK,CAACa,SAAN,CAAgB,MAAM;IACpB,IAAIC,MAAM,GAAG,IAAb;;IAEA,IAAI,CAACN,OAAL,EAAc;MACZ,OAAOO,SAAP;IACD;;IAED,CAAC,YAAY;MACX,MAAMC,KAAK,CAAC,GAAD,CAAX,CADW,CACO;;MAElB,IAAIF,MAAJ,EAAY;QACVG,UAAU,CAAC,CAAC,GAAGN,SAAJ,CAAD,CAAV;MACD;IACF,CAND;;IAQA,OAAO,MAAM;MACXG,MAAM,GAAG,KAAT;IACD,CAFD;EAGD,CAlBD,EAkBG,CAACN,OAAD,CAlBH;EAoBAR,KAAK,CAACa,SAAN,CAAgB,MAAM;IACpB,IAAI,CAACP,IAAL,EAAW;MACTW,UAAU,CAAC,EAAD,CAAV;IACD;EACF,CAJD,EAIG,CAACX,IAAD,CAJH;;EAKA,MAAMY,YAAY,GAAG,MAAOC,KAAP,IAAiB;IAClC;IACA,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CACb,uBADa,EAEd;MAAEC,WAAW,EAAEH,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmBC,WAAnB;IAAf,CAFc,EAGd;MACIC,OAAO,EAAE;QACL,gBAAgB;MADX;IADb,CAHc,CAAlB;IASA,IAAIC,WAAW,GAAG,EAAlB;IACA,IAAIC,WAAW,GAAG,4BAAlB;;IAEA,KAAK,IAAIC,CAAT,IAAcT,GAAG,CAACU,IAAJ,CAASC,KAAT,CAAe,IAAf,CAAd,EAAoC;MAChC;MACA,IAAIC,aAAa,GAAGH,CAAC,CAACI,OAAF,CAAU,sBAAV,EAAkC,EAAlC,CAApB,CAFgC,CAIhC;;MACA,IAAIC,gBAAgB,GAAGL,CAAC,CAACM,KAAF,CAAQP,WAAR,CAAvB;;MACA,IAAII,aAAa,CAACtB,MAAd,GAAuB,CAA3B,EAA8B;QAC1BiB,WAAW,CAACS,IAAZ,CAAiB;UACbC,IAAI,EAAEH,gBAAgB,CAAC,CAAD,CADT;UAEbI,IAAI,EAAEJ,gBAAgB,CAAC,CAAD;QAFT,CAAjB;MAIH;IACJ;;IACDtB,YAAY,CAACe,WAAD,CAAZ;EACH,CA5BD;;EA8BA,oBACI,QAAC,YAAD;IACI,IAAI,EAAErB,IADV;IAEI,MAAM,EAAE,MAAM;MACVC,OAAO,CAAC,IAAD,CAAP;IACH,CAJL;IAKI,OAAO,EAAE,MAAM;MACXA,OAAO,CAAC,KAAD,CAAP;IACH,CAPL;IASF,OAAO,EAAEC,OATP;IAUI,QAAQ,EAAEU,YAVd;IAWI,OAAO,EAAEP,SAAS,CAAC4B,GAAV,CAAeC,MAAD,IAAYA,MAAM,CAACH,IAAjC,CAXb;IAYI,WAAW,EAAGI,MAAD,iBACX,QAAC,SAAD,OACMA,MADN;MAEE,KAAK,EAAC,cAFR;MAGE,UAAU,EAAE,EACV,GAAGA,MAAM,CAACC,UADA;QAEVC,YAAY,eACV,QAAC,KAAD,CAAO,QAAP;UAAA,WACGnC,OAAO,gBAAG,QAAC,gBAAD;YAAkB,KAAK,EAAC,SAAxB;YAAkC,IAAI,EAAE;UAAxC;YAAA;YAAA;YAAA;UAAA,QAAH,GAAoD,IAD9D,EAEGiC,MAAM,CAACC,UAAP,CAAkBC,YAFrB;QAAA;UAAA;UAAA;UAAA;QAAA;MAHQ;IAHd;MAAA;MAAA;MAAA;IAAA;EAbN;IAAA;IAAA;IAAA;EAAA,QADJ;AA8BH,CA3FD;;GAAMtC,S;;KAAAA,S;AA6FN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}