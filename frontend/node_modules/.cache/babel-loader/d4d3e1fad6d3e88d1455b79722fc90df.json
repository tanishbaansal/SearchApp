{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanis\\\\Desktop\\\\assignment\\\\searchapp\\\\src\\\\components\\\\SearchBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport axios from \"axios\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBox = () => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [companies, setCompanies] = useState([]);\n  const loading = open && companies.length === 0;\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      // await sleep(1e3); // For demo purposes.\n      if (active) {\n        setCompanies([...companies]);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n  React.useEffect(() => {\n    if (!open) {\n      setCompanies([]);\n    }\n  }, [open]);\n\n  const handleChange = async event => {\n    //Fetching Data from api\n    const res = await axios.post(`http://localhost:3001`, {\n      companyName: event.target.value.toLowerCase()\n    }, {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    });\n    let companyList = [];\n    let matchString = /<.*id=\"(.*)\".*>(.*)<\\/div>/;\n\n    for (let i of res.data.split(\"\\n\")) {\n      //Sanitizing the data like removing html tags and extra tags\n      let sanitizedData = i.replace(/(\\t\\n)|(\\n\\t)|(\\t)/gm, \"\"); //Getting the required data from string using regex\n\n      let matchStringWithI = i.match(matchString);\n\n      if (sanitizedData.length > 0) {\n        companyList.push({\n          name: matchStringWithI[2],\n          link: matchStringWithI[1]\n        });\n      }\n    }\n\n    setCompanies(companyList);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  const saveCompany = () => {// event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      open: open,\n      onOpen: () => {\n        setOpen(true);\n      },\n      onClose: () => {\n        setOpen(false);\n      },\n      loading: loading,\n      getOptionLabel: companies => companies.name,\n      options: companies,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: handleChange,\n        ...params,\n        label: \"Search For A Company\",\n        InputProps: { ...params.InputProps,\n          endAdornment: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"inherit\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 41\n            }, this) : null, params.InputProps.endAdornment]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: saveCompany,\n      type: \"submit\",\n      sx: {\n        mt: 2\n      },\n      variant: \"contained\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBox, \"BkIoGXk6bODMSVJQEgxTXWPlBu0=\");\n\n_c = SearchBox;\nexport default SearchBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","useState","TextField","Autocomplete","axios","CircularProgress","Button","SearchBox","open","setOpen","companies","setCompanies","loading","length","useEffect","active","undefined","handleChange","event","res","post","companyName","target","value","toLowerCase","headers","companyList","matchString","i","data","split","sanitizedData","replace","matchStringWithI","match","push","name","link","handleSubmit","preventDefault","saveCompany","params","InputProps","endAdornment","mt"],"sources":["C:/Users/tanis/Desktop/assignment/searchapp/src/components/SearchBox.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst SearchBox = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [companies, setCompanies] = useState([]);\r\n\r\n    const loading = open && companies.length === 0;\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n\r\n        (async () => {\r\n            // await sleep(1e3); // For demo purposes.\r\n\r\n            if (active) {\r\n                setCompanies([...companies]);\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setCompanies([]);\r\n        }\r\n    }, [open]);\r\n    const handleChange = async (event) => {\r\n        //Fetching Data from api\r\n        const res = await axios.post(\r\n            `http://localhost:3001`,\r\n            { companyName: event.target.value.toLowerCase() },\r\n            {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                },\r\n            }\r\n        );\r\n        let companyList = [];\r\n        let matchString = /<.*id=\"(.*)\".*>(.*)<\\/div>/;\r\n\r\n        for (let i of res.data.split(\"\\n\")) {\r\n            //Sanitizing the data like removing html tags and extra tags\r\n            let sanitizedData = i.replace(/(\\t\\n)|(\\n\\t)|(\\t)/gm, \"\");\r\n\r\n            //Getting the required data from string using regex\r\n            let matchStringWithI = i.match(matchString);\r\n            if (sanitizedData.length > 0) {\r\n                companyList.push({\r\n                    name: matchStringWithI[2],\r\n                    link: matchStringWithI[1],\r\n                });\r\n            }\r\n        }\r\n        setCompanies(companyList);\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const saveCompany = () => {\r\n        // event.preventDefault();\r\n    };\r\n    return (\r\n        <form noValidate onSubmit={handleSubmit}>\r\n            <Autocomplete\r\n                open={open}\r\n                onOpen={() => {\r\n                    setOpen(true);\r\n                }}\r\n                onClose={() => {\r\n                    setOpen(false);\r\n                }}\r\n                loading={loading}\r\n                getOptionLabel={(companies) => companies.name}\r\n                options={companies}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        {...params}\r\n                        label=\"Search For A Company\"\r\n                        InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                                <React.Fragment>\r\n                                    {loading ? (\r\n                                        <CircularProgress\r\n                                            color=\"inherit\"\r\n                                            size={20}\r\n                                        />\r\n                                    ) : null}\r\n                                    {params.InputProps.endAdornment}\r\n                                </React.Fragment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                )}\r\n            />\r\n            <Button\r\n                onClick={saveCompany}\r\n                type=\"submit\"\r\n                sx={{ mt: 2 }}\r\n                variant=\"contained\"\r\n            >\r\n                Submit\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}